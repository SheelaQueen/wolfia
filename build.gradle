import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext {
        //@formatter:off

        //plugin versions
        gradleGitVersion        = '1.5.1'
        grGitVersion            = '2.2.1'
        aptVersion              = '0.15'
        springBootVersion       = '2.0.2.RELEASE'
        propDepsVersion         = '0.0.9.RELEASE'
        sonarQubeVersion        = '2.6.2'
        bintrayVersion          = '1.8.0'

        //@formatter:on
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'http://repo.spring.io/plugins-release' }
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
    dependencies {
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitVersion}"
        classpath "org.ajoberstar:grgit:${grGitVersion}"
        classpath "net.ltgt.gradle:gradle-apt-plugin:${aptVersion}"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "io.spring.gradle:propdeps-plugin:${propDepsVersion}"
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:${sonarQubeVersion}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintrayVersion}"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'org.ajoberstar.grgit'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'propdeps'
apply plugin: 'propdeps-idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'org.sonarqube'
apply plugin: 'jacoco'
apply plugin: 'com.jfrog.bintray'

ext {
    moduleName = 'wolfia'
    buildNumber = (System.getenv('CI') ? System.getenv('BUILD_NUMBER') : 'DEV')

    //@formatter:off
    javaVersion                 = '10'
    gradleWrapperVersion        = '4.8'

    springBootVersion           = "${springBootVersion}"

    jdaVersion                  = '3.7.1_421'

    logbackVersion              = '1.2.3'
    sentryVersion               = '1.7.5'
    discordAppenderVersion      = '1.0.0'

    yamlVersion                 = '1.21'
    okhttpVersion               = '3.10.0'
    caffeineVersion             = '2.6.2'
    jsonOrgVersion              = '20180813'

    sqlsauceVersion             = '0.2.3'
    jaxbApiVersion              = '2.3.0'
    dsProxyVersion              = '1.4.9'
    flywayVersion               = '5.1.1'

    lombokVersion               = '1.18.6'

    //@formater:on

}

group = 'space.npstr.wolfia'
version = "${versionTag()}".toString()


mainClassName = 'space.npstr.wolfia.Wolfia'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
    jcenter()                               // JDA, maybe others
    mavenCentral()                          // everything else
    maven { url 'https://dl.bintray.com/napster/SqlSauce' }
    mavenLocal()                            // local maven repo, mostly for testing stuff
    maven { url 'https://jitpack.io' }      //for getting builds from github
}

configurations {
    // fucks with spring boot jar, we dont need it anyways
    // be VERY careful and test the produced jar if ever reenabled
    compile.exclude module: 'opus-java'
}

dependencies {
    //@formatter:off

    //discord api
    compile group: 'net.dv8tion',           name: 'JDA',                        version: jdaVersion             //discord API

    //logging
    compile group: 'ch.qos.logback',        name: 'logback-classic',            version: logbackVersion         //logging framework
    compile group: 'space.npstr',           name: 'logback-discord-appender',   version: discordAppenderVersion //log to discord
    compile group: 'io.sentry',             name: 'sentry-logback',             version: sentryVersion          //error aggregation

    //utility
    compile group: 'org.yaml',              name: 'snakeyaml',                  version: yamlVersion            //parse yaml files
    compile group: 'com.squareup.okhttp3',  name: 'okhttp',                     version: okhttpVersion          //http client
    compile group: 'com.github.ben-manes.caffeine', name:'caffeine',            version: caffeineVersion        //caches
    compile group: 'org.json',              name: 'json',                       version: jsonOrgVersion

    //database
    compile group: 'space.npstr.SqlSauce',  name: 'sqlsauce-core',              version: sqlsauceVersion        //db stack
    compile group: 'space.npstr.SqlSauce',  name: 'discord-entities',           version: sqlsauceVersion        //moar db entities
    compile group: 'javax.xml.bind',        name: 'jaxb-api',                   version: jaxbApiVersion         //required by hibernate for java 9
    compile group: 'net.ttddyy',            name: 'datasource-proxy',           version: dsProxyVersion         //log proxy for db queries
    compile group: 'org.flywaydb',          name: 'flyway-core',                version: flywayVersion          //database schema migrations

    //spring
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux',         version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa',        version: springBootVersion
    optional group:'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion

    //annotation processing
    compileOnly         group: 'org.projectlombok', name:'lombok', version: lombokVersion
    annotationProcessor group: 'org.projectlombok', name:'lombok', version: lombokVersion

    //@formatter:on
}


wrapper() {
    gradleVersion = gradleWrapperVersion
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}

compileJava.dependsOn 'clean'
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileJava.options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'

//required by spring boot configuration processor
compileJava.dependsOn(processResources)

bootRun {
    //compiling tests during bootRun increases the likelyhood of catching broken tests locally instead of on the CI
    dependsOn compileTestJava

    //pass in custom jvm args
    // source: https://stackoverflow.com/a/25079415
    // example: ./gradlew bootRun -PjvmArgs="--illegal-access=debug -Dwhatever=value"
    if (project.hasProperty('jvmArgs')) {
        //noinspection GroovyAssignabilityCheck
        jvmArgs project.jvmArgs.split('\\s+')
    }
}

bootJar {
    archiveName = "wolfia.jar"
    doLast {
        copy {
            from 'build/libs/wolfia.jar'
            into '.'
        }
    }
}

processResources {
    //inject values into app.properties
    filesMatching('**/app.properties') {
        filter ReplaceTokens, tokens: [
                "project.version"   : project.version,
                "project.groupId"   : project.group,
                "project.artifactId": project.ext.moduleName,
                "env.BUILD_NUMBER"  : project.ext.buildNumber,
                "env.BUILD_TIME"    : System.currentTimeMillis() + ''
        ]
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    filesSpec {
        from 'build/libs'
        into '.'
        rename '(.+)\\.(.+)', '$1-' + project.version + '.$2'
    }
    dryRun = false
    publish = true
    pkg {
        repo = 'wolfia'
        name = 'beta'
        userOrg = user
        version {
            name = project.version
        }
    }
}

//returns the last git tag (that needs to be in the form of MAJOR.MINOR.PATCH) and the build number
//@SuppressWarnings("GrMethodMayBeStatic")
String versionTag() {
    def matcher = /^([0-9]+\.[0-9]+\.[0-9]+).*$/
    def match = ("${grgit.describe()}" =~ matcher)[0]

    //noinspection GroovyAssignabilityCheck
    def result = match[1]
    result += '-'
    result += project.ext.buildNumber

    println("Version: " + result)
    return result
}
