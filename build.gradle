import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
    ext {
        //@formatter:off

        //plugin versions
        gradleGitVersion        = '1.4.21'
        aptVersion              = '0.15'
        shadowVersion           = '2.0.3'
        bintrayVersion          = '1.8.0'

        //@formatter:on
    }
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:${gradleGitVersion}"
        classpath "net.ltgt.gradle:gradle-apt-plugin:${aptVersion}"
        classpath "com.github.jengelman.gradle.plugins:shadow:${shadowVersion}"
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintrayVersion}"
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.gorylenko.gradle-git-properties'
apply plugin: 'net.ltgt.apt-idea'
apply plugin: 'com.github.johnrengelman.plugin-shadow'
apply plugin: 'com.jfrog.bintray'

ext {
    moduleName = 'wolfia'
    buildNumber = (System.getenv('CI') ? System.getenv('BUILD_NUMBER') : 'DEV')

    //@formatter:off
    javaVersion                 = '10'
    gradleWrapperVersion        = '4.7'

    jdaVersion                  = '3.6.0_362'

    logbackVersion              = '1.2.3'
    sentryVersion               = '1.7.4'
    discordAppenderVersion      = '1.0.0'

    yamlVersion                 = '1.21'
    okhttpVersion               = '3.10.0'
    caffeineVersion             = '2.6.2'

    sqlsauceVersion             = '0.2.3'
    jaxbApiVersion              = '2.3.0'
    dsProxyVersion              = '1.4.9'
    flywayVersion               = '5.0.7'

    //@formater:on

}

group = 'space.npstr.wolfia'
//noinspection GroovyAssignabilityCheck
version = '0.19.0-' + project.ext.buildNumber


mainClassName = 'space.npstr.wolfia.Wolfia'

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

repositories {
    jcenter()                               // JDA, maybe others
    mavenCentral()                          // everything else
    maven { url 'https://dl.bintray.com/napster/SqlSauce' }
    mavenLocal()                            // local maven repo, mostly for testing stuff
    maven { url 'https://jitpack.io' }      //for getting builds from github

    //FIXME switch to regular, non-edge build as soon as 1.16.21 is released
    //this is what we want to download: https://projectlombok.org/lombok-edge.jar
    ivy {
        url 'https://projectlombok.org/'
        layout 'pattern', {
            artifact '/[artifact].[ext]'
        }
    }
}

dependencies {
    //@formatter:off

    //discord api
    compile group: 'net.dv8tion',           name: 'JDA',                        version: jdaVersion             //discord API

    //logging
    compile group: 'ch.qos.logback',        name: 'logback-classic',            version: logbackVersion         //logging framework
    compile group: 'space.npstr',           name: 'logback-discord-appender',   version: discordAppenderVersion //log to discord
    compile group: 'io.sentry',             name: 'sentry-logback',             version: sentryVersion          //error aggregation

    //utility
    compile group: 'org.yaml',              name: 'snakeyaml',                  version: yamlVersion            //parse yaml files
    compile group: 'com.squareup.okhttp3',  name: 'okhttp',                     version: okhttpVersion          //http client
    compile group: 'com.github.ben-manes.caffeine', name:'caffeine',            version: caffeineVersion        //caches

    //database
    compile group: 'space.npstr.SqlSauce',  name: 'sqlsauce-core',              version: sqlsauceVersion        //db stack
    compile group: 'space.npstr.SqlSauce',  name: 'discord-entities',           version: sqlsauceVersion        //moar db entities
    compile group: 'javax.xml.bind',        name: 'jaxb-api',                   version: jaxbApiVersion         //required by hibernate for java 9
    compile group: 'net.ttddyy',            name: 'datasource-proxy',           version: dsProxyVersion         //log proxy for db queries
    compile group: 'org.flywaydb',          name: 'flyway-core',                version: flywayVersion          //database schema migrations

    //lombok annotation processing
    compileOnly         name: 'lombok-edge'
    annotationProcessor name: 'lombok-edge'

    //@formatter:on
}


task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
    //noinspection UnnecessaryQualifiedReference
    distributionType = Wrapper.DistributionType.ALL
}

compileJava.dependsOn 'clean'
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
compileJava.options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'

shadowJar {
    archiveName = 'wolfia.jar'
    doLast {
        copy {
            from 'build/libs/wolfia.jar'
            into '.'
        }
    }
}

processResources {
    //inject values into app.properties
    filesMatching('**/app.properties') {
        filter ReplaceTokens, tokens: [
                "project.version"   : project.version,
                "project.groupId"   : project.group,
                "project.artifactId": project.ext.moduleName,
                "env.BUILD_NUMBER"  : project.ext.buildNumber,
                "env.BUILD_TIME"    : System.currentTimeMillis() + ''
        ]
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    filesSpec {
        from 'build/libs'
        into '.'
        rename '(.+)\\.(.+)', '$1-' + project.version + '.$2'
    }
    dryRun = false
    publish = true
    pkg {
        repo = 'wolfia'
        name = 'beta'
        userOrg = user
        version {
            name = project.version
        }
    }
}
